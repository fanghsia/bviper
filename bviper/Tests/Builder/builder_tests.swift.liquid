//
//  {{ prefix }}{{ module_info.name }}{{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright Â© {{ year }} {{ developer.company }}. All rights reserved.
//

import XCTest
@testable import {{ module_info.project_name }}

class {{ module_info.name }}ModuleConfiguratorTests: XCTestCase {

  override func setUp() {
    super.setUp()
    // Put setup code here. This method is called before the invocation of each test method in the class.
  }

  override func tearDown() {
    // Put teardown code here. This method is called after the invocation of each test method in the class.
    super.tearDown()
  }

  func testModuleBuilder() {
      // given

      // when
      let viewController = BootModuleBuilder.setupModule() as! BootViewController

      //then
      XCTAssertNotNil(viewController.output, "BootViewController is nil after builder")
      XCTAssertTrue(viewController.output is BootPresenter, "output is not BootPresenter")

      let presenter: BootPresenter = viewController.output as! BootPresenter
      XCTAssertNotNil(presenter.view, "view in BootPresenter is nil after builder")
      XCTAssertNotNil(presenter.router, "router in BootPresenter is nil after builder")
      XCTAssertTrue(presenter.router is BootRouter, "router is not BootRouter")

      let interactor: BootInteractor = presenter.interactor as! BootInteractor
      XCTAssertNotNil(interactor.output, "output in BootInteractor is nil after builder")

      let router = presenter.router as! BootRouter
      XCTAssertNotNil(router.transitionHandler, "handler of router is nil after builder")
  }
}
